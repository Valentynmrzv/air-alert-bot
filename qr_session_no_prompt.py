# qr_session_no_prompt.py
import os
import asyncio
import qrcode_terminal
from telethon import TelegramClient
from telethon.sessions import StringSession
from dotenv import load_dotenv

load_dotenv()
api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")
env_path = ".env"  # —à–ª—è—Ö –¥–æ .env

async def main():
    # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑ –ø—É—Å—Ç–∏–º StringSession
    client = TelegramClient(StringSession(), api_id, api_hash)
    await client.connect()

    # –ì–µ–Ω–µ—Ä—É—î–º–æ QR –¥–ª—è –≤—Ö–æ–¥—É
    qr_login = await client.qr_login()

    print("\nüî≥ –í—ñ–¥–∫—Ä–∏–π Telegram –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ:")
    print("   –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚Üí –ü—Ä–∏—Å—Ç—Ä–æ—ó ‚Üí –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π")
    print("\n–°–∫–∞–Ω—É–π —Ü–µ–π QR —É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ:\n")
    qrcode_terminal.draw(qr_login.url)

    print("\n–ê–±–æ –≤—ñ–¥–∫—Ä–∏–π —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ Telegram:")
    print(qr_login.url)

    # –ß–µ–∫–∞—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—Ö–æ–¥—É
    await qr_login.wait()

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å–µ—Å—ñ—é
    session_str = client.session.save()
    print("\n=== TELETHON_SESSION ===")
    print(session_str)
    print("========================\n")

    # –ß–∏—Ç–∞—î–º–æ —ñ—Å–Ω—É—é—á–∏–π .env —ñ –æ–Ω–æ–≤–ª—é—î–º–æ TELETHON_SESSION
    if os.path.exists(env_path):
        with open(env_path, "r", encoding="utf-8") as f:
            lines = f.readlines()

        updated = False
        for i, line in enumerate(lines):
            if line.startswith("TELETHON_SESSION="):
                lines[i] = f"TELETHON_SESSION={session_str}\n"
                updated = True
                break

        if not updated:
            lines.append(f"TELETHON_SESSION={session_str}\n")

        with open(env_path, "w", encoding="utf-8") as f:
            f.writelines(lines)

        print(f"[‚úÖ] TELETHON_SESSION –æ–Ω–æ–≤–ª–µ–Ω–æ —É {env_path}")
    else:
        with open(env_path, "w", encoding="utf-8") as f:
            f.write(f"TELETHON_SESSION={session_str}\n")
        print(f"[‚úÖ] –°—Ç–≤–æ—Ä–µ–Ω–æ {env_path} –∑ TELETHON_SESSION")

    await client.disconnect()

if __name__ == "__main__":
    asyncio.run(main())
