# qr_session_no_prompt.py
import os
import asyncio
import pyqrcode
from telethon import TelegramClient
from telethon.sessions import StringSession
from dotenv import load_dotenv

load_dotenv()
api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")
env_path = ".env"

async def main():
    client = TelegramClient(StringSession(), api_id, api_hash)
    await client.connect()

    qr_login = await client.qr_login()
    url = qr_login.url

    print("\nüî≥ –í—ñ–¥–∫—Ä–∏–π Telegram –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ:")
    print("   –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚Üí –ü—Ä–∏—Å—Ç—Ä–æ—ó ‚Üí –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π\n")
    # ASCII-QR —É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ (–±–µ–∑ Pillow)
    qr = pyqrcode.create(url, error='L')
    print(qr.terminal(quiet_zone=1))

    print("\n–ê–±–æ –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–∫—Ä–∏–π —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ Telegram:")
    print(url)

    # –î–æ—á–µ–∫–∞—Ç–∏—Å—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
    await qr_login.wait()

    # –ó–±–µ—Ä–µ–≥—Ç–∏ StringSession
    session_str = client.session.save()
    print("\n=== TELETHON_SESSION ===")
    print(session_str)
    print("========================\n")

    # –û–Ω–æ–≤–∏—Ç–∏/—Å—Ç–≤–æ—Ä–∏—Ç–∏ .env —ñ–∑ TELETHON_SESSION
    lines = []
    if os.path.exists(env_path):
        with open(env_path, "r", encoding="utf-8") as f:
            lines = f.readlines()

    updated = False
    for i, line in enumerate(lines):
        if line.startswith("TELETHON_SESSION="):
            lines[i] = f"TELETHON_SESSION={session_str}\n"
            updated = True
            break
    if not updated:
        lines.append(f"TELETHON_SESSION={session_str}\n")

    with open(env_path, "w", encoding="utf-8") as f:
        f.writelines(lines)

    print(f"[‚úÖ] TELETHON_SESSION –∑–∞–ø–∏—Å–∞–Ω–æ —É {env_path}")
    await client.disconnect()

if __name__ == "__main__":
    asyncio.run(main())
